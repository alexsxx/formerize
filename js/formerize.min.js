!function (a) { a.fn.formerize = function (b) { var c = { init: function (b) { return void 0 != b && "object" == typeof b ? this.each(function () { var c = a(this), d = c.attr("name"); b.hasOwnProperty(d) && (c.is("select") ? c.find('option[value="' + b[d] + '"]').prop("selected", !0) : c.is(":checkbox, :radio") ? c.prop("checked", b[d]) : c.is("input, textarea") ? c.val(b[d]) : c.html(b[d])) }) : console.error("Param error") }, get: function () { var b = {}; return this.each(function () { var c = a(this), d = c.attr("name"); c.is("select") ? b[d] = c.find("option:selected").val() : c.is(":checkbox, :radio") ? b[d] = c.prop("checked") : c.is("input, textarea") && (b[d] = c.is("[type=number]") ? a.isNumeric(c.val()) ? parseFloat(c.val()) : 0 : c.val()) }), b } }; if (c[b]) return c[b].apply(this, Array.prototype.slice.call(arguments, 1)); if ("object" != typeof b && b) throw "Method doesn't exist"; return c.init.apply(this, arguments) } }(jQuery);
